---
source: crates/forge_tool/src/tool_engine.rs
expression: tool_str
snapshot_kind: text
---
{
  "name": "think",
  "description": "A framework for iterative reasoning in problem-solving. ## Purpose Tracks reasoning steps (\\\"thoughts\\\") to solve complex problems: - Breaks tasks into steps - Supports revisions and branching - Tracks confidence and verifies solutions ## Key Features - Adjust `total_thoughts` for complexity - Link revisions with `revises_thought` - Branch paths via `branch_from_thought` - Update `solution_confidence` - Mark completion with `solution_reached` ## Workflow 1. Initialize `Think` with `total_thoughts`. 2. Add steps to `thought_history`. 3. Revise or branch as needed. 4. Update confidence and validate. 5. Mark `solution_reached` when done. ## Fields - `thought_history`: Steps taken. - `branches`: Alternate paths. - `solution_reached`: Final solution.",
  "input_schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ThoughtData",
    "type": "object",
    "required": [
      "next_thought_needed",
      "thought",
      "thought_number",
      "total_thoughts"
    ],
    "properties": {
      "branch_from_thought": {
        "type": [
          "integer",
          "null"
        ],
        "format": "int32"
      },
      "branch_id": {
        "type": [
          "string",
          "null"
        ]
      },
      "is_revision": {
        "type": [
          "boolean",
          "null"
        ]
      },
      "needs_more_thoughts": {
        "type": [
          "boolean",
          "null"
        ]
      },
      "next_thought_needed": {
        "type": "boolean"
      },
      "revises_thought": {
        "type": [
          "integer",
          "null"
        ],
        "format": "int32"
      },
      "solution_confidence": {
        "type": [
          "number",
          "null"
        ],
        "format": "float"
      },
      "thought": {
        "type": "string"
      },
      "thought_number": {
        "type": "integer",
        "format": "int32"
      },
      "total_thoughts": {
        "type": "integer",
        "format": "int32"
      }
    }
  },
  "output_schema": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ThoughtResult",
    "type": "object",
    "required": [
      "branches",
      "next_thought_needed",
      "solution_confidence",
      "solution_reached",
      "thought_history_length",
      "thought_number",
      "total_thoughts"
    ],
    "properties": {
      "branches": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "next_thought_needed": {
        "type": "boolean"
      },
      "solution_confidence": {
        "type": "number",
        "format": "float"
      },
      "solution_reached": {
        "type": "boolean"
      },
      "thought_history_length": {
        "type": "integer",
        "format": "uint",
        "minimum": 0.0
      },
      "thought_number": {
        "type": "integer",
        "format": "int32"
      },
      "total_thoughts": {
        "type": "integer",
        "format": "int32"
      }
    }
  }
}
